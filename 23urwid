#!/usr/bin/python

import optparse
import subprocess
import sys

from myspath import path

optparser = optparse.OptionParser()
optparser.add_option('-x','--exit',dest='exit', action='store_true',
        help='Exit on failure')
optparser.add_option('-f','--force',dest='force', action='store_true',
        help='Copy and run 2to3 regardless of timestamp')
(opts, args) = optparser.parse_args()

base = path("~/urwid").expanduser()
newbase = path("~/urwid3").expanduser()

def makedirs(p):
    tomake = []
    while not p.exists():
        tomake.append(p)
        p = p[:-1]
    for p in tomake:
        p.mkdir()

def forcecopy(loc, dst):
    makedirs(dst[:-1])
    loc.copy(dst, copystat=True)

for p in base.getfiles(True):
    newloc = newbase + base.relpathto(p)
    if p.extension.lower() != 'py':
        #if not newloc.exists():
            #print "Copying", base.relpathto(p)
            #forcecopy(p, newloc)
        continue
    if 'build' in p or '.git' in p or '.hg' in p:
        continue
    if (not opts.force and newloc.exists() 
        and p.stat().mtime <= newloc.stat().mtime):
        continue
    
    print newloc
    forcecopy(p, newloc)
    proc = subprocess.Popen(['2to3','-w', '--no-diffs', '-n', str(newloc)], stdout = sys.stdout, stderr = sys.stderr)
    retval = proc.wait()
    if opts.exit:
        print "2to3 returned", retval
        break